{
	"info": {
		"_postman_id": "7b5e1d0a-7879-4b1c-b3f2-18be85af9c7a",
		"name": "Sample RESTFul  Service - Test Suite 1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10679611"
	},
	"item": [
		{
			"name": "Delete All",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body is correct\", function () {",
							"    var responseValue = pm.response.json();",
							"    pm.expect(responseValue).to.eql({ \"message\": \"Success\" });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/persons/all",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"persons",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "List persons - should be empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body is correct\", function () {",
							"    var responseValue = pm.response.json();",
							"    pm.expect(responseValue).to.eql([]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/persons",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"persons"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Person 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body is correct\", function () {",
							"    var responseValue = pm.response.json();",
							"    expectedValue = {",
							"        \"id\": 1,",
							"        \"firstName\": \"Joe\",",
							"        \"lastName\": \"Jones\",",
							"        \"favoriteColor\": \"Cyan\",",
							"        \"birthYear\": \"1970\"",
							"    };",
							"    pm.expect(responseValue).to.eql(expectedValue);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"Joe\",\n    \"lastName\": \"Jones\",\n    \"favoriteColor\": \"Cyan\",\n    \"birthYear\": \"1970\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/persons",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"persons"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Person 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body is correct\", function () {",
							"    var responseValue = pm.response.json();",
							"    expectedValue = {",
							"        \"id\": 2,",
							"        \"firstName\": \"Sue\",",
							"        \"lastName\": \"Smith\",",
							"        \"birthYear\": \"1972\"",
							"    };",
							"    pm.expect(responseValue).to.eql(expectedValue);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"Sue\",\n    \"lastName\": \"Smith\",\n    \"birthYear\": \"1972\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/persons",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"persons"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Person 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body is correct\", function () {",
							"    var responseValue = pm.response.json();",
							"    expectedValue = {",
							"        \"id\": 3,",
							"        \"firstName\": \"Pam\",",
							"        \"lastName\": \"Patternson\"",
							"    };",
							"    pm.expect(responseValue).to.eql(expectedValue);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"Pam\",\n    \"lastName\": \"Patternson\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/persons",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"persons"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Person 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body is correct\", function () {",
							"    var responseValue = pm.response.json();",
							"    expectedValue = {",
							"        \"id\": 3,",
							"        \"firstName\": \"Pam\",",
							"        \"lastName\": \"Patternson\"",
							"    };",
							"    pm.expect(responseValue).to.eql(expectedValue);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"Pam\",\n    \"lastName\": \"Patternson\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/persons/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"persons",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Person 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body is correct\", function () {",
							"    var responseValue = pm.response.json();",
							"    expectedValue = {",
							"        \"id\": 1,",
							"        \"firstName\": \"Joe\",",
							"        \"lastName\": \"Jones\",",
							"        \"favoriteColor\": \"Cyan\",",
							"        \"birthYear\": \"1970\"",
							"    };",
							"    pm.expect(responseValue).to.eql(expectedValue);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"Joe\",\n    \"lastName\": \"Jones\",\n    \"favoriteColor\": \"Cyan\",\n    \"birthYear\": \"1970\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/persons/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"persons",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Person 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body is correct\", function () {",
							"    var responseValue = pm.response.json();",
							"    expectedValue = {",
							"        \"id\": 2,",
							"        \"firstName\": \"Sue\",",
							"        \"lastName\": \"Smith\",",
							"        \"birthYear\": \"1972\"",
							"    };",
							"    pm.expect(responseValue).to.eql(expectedValue);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"Sue\",\n    \"lastName\": \"Smith\",\n    \"birthYear\": \"1972\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/persons/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"persons",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Person 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body is correct\", function () {",
							"    var responseValue = pm.response.json();",
							"    pm.expect(responseValue).to.eql({ \"message\": \"Person not found\" });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"Sue\",\n    \"lastName\": \"Smith\",\n    \"birthYear\": \"1972\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/persons/0",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"persons",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Try to get a non-existant person",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body is correct\", function () {",
							"    var responseValue = pm.response.json();",
							"    pm.expect(responseValue).to.eql({ \"message\": \"Person not found\" });",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"Pam\",\n    \"lastName\": \"Patternson\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/persons/99",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"persons",
						"99"
					]
				}
			},
			"response": []
		},
		{
			"name": "List persons - should contain 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body is correct\", function () {",
							"    var responseValue = pm.response.json();",
							"",
							"    var expectedValue = [",
							"        {",
							"            \"id\": 1,",
							"            \"firstName\": \"Joe\",",
							"            \"lastName\": \"Jones\",",
							"            \"favoriteColor\": \"Cyan\",",
							"            \"birthYear\": \"1970\"",
							"        },",
							"        {",
							"            \"id\": 2,",
							"            \"firstName\": \"Sue\",",
							"            \"lastName\": \"Smith\",",
							"            \"birthYear\": \"1972\"",
							"        },",
							"        {",
							"            \"id\": 3,",
							"            \"firstName\": \"Pam\",",
							"            \"lastName\": \"Patternson\"",
							"        }",
							"    ];",
							"    pm.expect(responseValue).to.eql(expectedValue);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/persons",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"persons"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Person 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body is correct\", function () {",
							"    var responseValue = pm.response.json();",
							"    expectedValue = {",
							"        \"id\": 2,",
							"        \"firstName\": \"Sue\",",
							"        \"lastName\": \"Smith\",",
							"        \"birthYear\": \"1972\"",
							"    };",
							"    pm.expect(responseValue).to.eql(expectedValue);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/persons/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"persons",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Person 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body is correct\", function () {",
							"    pm.response.to.have.body(\"true\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"Joseph\",\n    \"lastName\": \"Jones\",\n    \"favoriteColor\": \"Yellow\",\n    \"birthYear\": \"1971\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/persons/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"persons",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Try a bad update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body is correct\", function () {",
							"    pm.response.to.have.body(\"false\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": 2,\n    \"firstName\": \"Joseph\",\n    \"lastName\": \"Jones\",\n    \"favoriteColor\": \"Yellow\",\n    \"birthYear\": \"1971\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/persons/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"persons",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "List persons - should contain 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body is correct\", function () {",
							"    var responseValue = pm.response.json();",
							"",
							"    var expectedValue = [",
							"        {",
							"            \"id\": 1,",
							"            \"firstName\": \"Joseph\",",
							"            \"lastName\": \"Jones\",",
							"            \"favoriteColor\": \"Yellow\",",
							"            \"birthYear\": \"1971\"",
							"        },",
							"        {",
							"            \"id\": 3,",
							"            \"firstName\": \"Pam\",",
							"            \"lastName\": \"Patternson\"",
							"        }",
							"    ];",
							"    pm.expect(responseValue).to.eql(expectedValue);",
							"",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/persons",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"persons"
					]
				}
			},
			"response": []
		},
		{
			"name": "Try to delete a non-existant person",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body is correct\", function () {",
							"    var responseValue = pm.response.json();",
							"    pm.expect(responseValue).to.eql({",
							"        \"message\": \"Person not found\"",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/persons/99",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"persons",
						"99"
					]
				}
			},
			"response": []
		},
		{
			"name": "Try to delete person 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body is correct\", function () {",
							"    var responseValue = pm.response.json();",
							"    pm.expect(responseValue).to.eql({",
							"        \"message\": \"Person not found\"",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/persons/0",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"persons",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Person 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body is correct\", function () {",
							"    var responseValue = pm.response.json();",
							"    expectedValue = {",
							"        \"id\": 1,",
							"        \"firstName\": \"Joseph\",",
							"        \"lastName\": \"Jones\",",
							"        \"favoriteColor\": \"Yellow\",",
							"        \"birthYear\": \"1971\"",
							"    };",
							"    pm.expect(responseValue).to.eql(expectedValue);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/persons/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"persons",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "List persons - should contain 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body is correct\", function () {",
							"    var responseValue = pm.response.json();",
							"",
							"    var expectedValue = [",
							"        {",
							"            \"id\": 3,",
							"            \"firstName\": \"Pam\",",
							"            \"lastName\": \"Patternson\"",
							"        }",
							"    ];",
							"    pm.expect(responseValue).to.eql(expectedValue);",
							"",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/persons",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"persons"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Person 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body is correct\", function () {",
							"    var responseValue = pm.response.json();",
							"    expectedValue = {",
							"        \"firstName\": \"Pam\",",
							"        \"lastName\": \"Patternson\",",
							"        \"id\": 3",
							"    };",
							"    pm.expect(responseValue).to.eql(expectedValue);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/persons/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"persons",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "List persons - should be empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body is correct\", function () {",
							"    var responseValue = pm.response.json();",
							"    pm.expect(responseValue).to.eql([]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/persons",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"persons"
					]
				}
			},
			"response": []
		}
	]
}